

/**
 *
 * @author Jonathan
 */
public class GridPanel extends UIPanel
{
	private static final long serialVersionUID = 1L;
	
	private final Game gameInstance;
	private Stone[][] gridSpots;
	
	/**
	 * 
	 */
	public GridPanel()
	{
		this(Game.GUEST_NAME, SkillLevel.Easy, true);
	}
	
	/**
	 * Creates new form GridPanel
	 * @param username1
	 * @param skillLevel
	 * @param isPlayerOneTurn
	 */
	public GridPanel(String username1, SkillLevel skillLevel, boolean isPlayerOneTurn)
	{
		initComponents();
		
		this.gridSpots = new Stone[6][6];
		this.gameInstance = new Game(username1, skillLevel, isPlayerOneTurn);
		if(this.gameInstance == null)
		{
			throw new IllegalArgumentException("Game could not be created with set options");
		}
	}
	
	/**
	 * Creates new form GridPanel
	 * @param username1
	 * @param username2
	 * @param isPlayerOneTurn
	 */
	public GridPanel(String username1, String username2, boolean isPlayerOneTurn)
	{
		initComponents();
		
		this.gridSpots = new Stone[6][6];
		this.gameInstance = new Game(username1, username2, isPlayerOneTurn);
		if(this.gameInstance == null)
		{
			throw new IllegalArgumentException("Game could not be created with set options");
		}
	}

	public Game getGame()
	{
		return this.gameInstance;
	}
	
	public Stone[][] getGridSpots()
	{
		Stone[][] copy = new Stone[6][6];
		
		System.arraycopy(this.gridSpots, 0, copy, 0, this.gridSpots.length);
		
		return copy;
	}
	
	public boolean placeStone(Stone stone)
	{
		if(stone == null)
		{
			throw new IllegalArgumentException("stone is null");
		}
		
		Location loc = stone.getStoneLocation();
		int row = loc.getXPos();
		int col = loc.getYPos();
		
		if(this.gridSpots[row][col] != null)
		{
			return false;
		}
		
		this.gridSpots[row][col] = stone;
		this.displayStone(stone);
		return true;
	}
	
	private void displayStone(Stone stone)
	{
		//TODO: Actually display the stone.
		
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
